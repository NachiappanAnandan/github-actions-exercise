name: React App CICD

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16, 18]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: node -v
      - run: echo "Running Node ${{ matrix.node }} on ${{ matrix.os }}"

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-app-build-${{ matrix.node }}
          path: ./dist
  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16, 18]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: node -v
      - run: echo "Running Node ${{ matrix.node }} on ${{ matrix.os }}"

      - name: Install dependencies
        run: npm ci
      - name: test code
        run: npm run test

  use-artifact:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-app-build
          path: ./dist

      - name: Build Docker image
        run: |
          docker build -t react-artifact-demo .
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/react-artifact-demo
          docker tag react-artifact-demo:latest $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
